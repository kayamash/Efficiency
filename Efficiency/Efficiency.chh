#ifndef EFFICIENCY_CHH
#define EFFICIENCY_CHH

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>
#include <TH1.h>
#include <TH2.h>
#include <TCanvas.h>
#include <stdio.h>
#include <math.h>
#include <cmath>
#include <iostream>
#include <fstream>
#include <sys/stat.h>
#include <sys/types.h>
#include <string>
#include <sstream>
#include <TF1.h>
#include <TTree.h>
#include <TStyle.h>
#include <TText.h>
#include <TGraphErrors.h>
#include <TLegend.h>
#include <vector>
#include <TMath.h>
#include <TBranch.h>
#include <TObject.h>
#include <TChain.h>

class Efficiency
{
  //variable
private:
  //for tree
  TTree *tChain;
  Float_t m_aipc;
  long int m_eNumber;
  long int m_rNumber;
  Double_t m_toff_pt;
  Double_t m_toff_eta;
  Double_t m_toff_exteta;
  Double_t m_toff_extinneta;
  Double_t m_toff_phi;
  Double_t m_toff_extphi;
  Double_t m_toff_extinnphi;
  Double_t m_tag_charge;
  Double_t m_tag_d0,m_tag_z0;
  Double_t m_probe_segment_etaIndex[10];
  Double_t m_probe_segment_chamberIndex[10];
  Double_t m_probe_segment_x[10];
  Double_t m_probe_segment_y[10];
  Double_t m_probe_segment_z[10];
  Double_t m_probe_segment_nPrecisionHits[10];
  Double_t m_probe_segment_sector[10];
  Double_t m_poff_pt;
  Double_t m_poff_eta;
  Double_t m_poff_exteta;
  Double_t m_poff_extinneta;
  Double_t m_poff_phi;
  Double_t m_poff_extphi;
  Double_t m_poff_extinnphi;
  Double_t m_poff_charge;
  Double_t m_poff_d0;
  Double_t m_poff_z0;
  Double_t m_tp_extdR;
  Double_t m_tp_dR;
  Double_t m_tL1_pt;
  Double_t m_tL1_eta;
  Double_t m_tL1_phi;
  Double_t m_sumReqdRL1;
  Double_t m_tSA_pt;
  Double_t m_tSA_eta;
  Double_t m_tSA_phi;
  Double_t m_sumReqdREF;

  std::vector<std::string> *m_mes_name;
  Int_t m_tag_proc;
  std::vector<Double_t> *m_pL1_pt;
  std::vector<Double_t> *m_pL1_eta;
  std::vector<Double_t> *m_pL1_phi;
  std::vector<Double_t> *m_pL1_dR;
  std::vector<Int_t> *m_pL1_pass;
  std::vector<Int_t> *m_pL1_roiNumber;
  std::vector<Int_t> *m_pL1_roiSector;
  std::vector<Double_t> *m_pSA_pt;
  std::vector<Double_t> *m_pSA_eta;
  std::vector<Double_t> *m_pSA_phi;
  std::vector<Double_t> *m_pSA_dR;
  std::vector<Double_t> *m_pSA_sAddress;
  std::vector<Double_t> *m_pSA_phims;
  std::vector<Double_t> *m_pSA_phibe;
  std::vector<float> *m_pSA_roieta;
  std::vector<float> *m_pSA_roiphi;
  std::vector<Int_t> *m_pSA_pass;
  std::vector<unsigned int> *m_pSA_roiNumber;
  std::vector<unsigned int> *m_pSA_roiSector;
  std::vector<vector<float>> *m_pSA_rpcX;
  std::vector<vector<float>> *m_pSA_rpcY;
  std::vector<vector<float>> *m_pSA_rpcZ;
  std::vector<vector<float>> *m_pSA_rpcR;
  std::vector<vector<float>> *m_pSA_mdtZ;
  std::vector<vector<float>> *m_pSA_mdtR;
  std::vector<vector<float>> *m_pSA_mdtPhi;
  std::vector<vector<Int_t>> *m_pSA_mdthitChamber;
  std::vector<Double_t> *m_pSA_superpointZ_BI;
  std::vector<Double_t> *m_pSA_superpointZ_BM;
  std::vector<Double_t> *m_pSA_superpointZ_BO;
  std::vector<Double_t> *m_pSA_superpointZ_BME;
  std::vector<Double_t> *m_pSA_superpointZ_EI;
  std::vector<Double_t> *m_pSA_superpointZ_EM;
  std::vector<Double_t> *m_pSA_superpointZ_EO;
  std::vector<Double_t> *m_pSA_superpointZ_EE;
  std::vector<Double_t> *m_pSA_superpointZ_CSC;
  std::vector<Double_t> *m_pSA_superpointZ_BEE;
  std::vector<Double_t> *m_pSA_superpointR_BI;
  std::vector<Double_t> *m_pSA_superpointR_BM;
  std::vector<Double_t> *m_pSA_superpointR_BO;
  std::vector<Double_t> *m_pSA_superpointR_BME;
  std::vector<Double_t> *m_pSA_superpointR_EI;
  std::vector<Double_t> *m_pSA_superpointR_EM;
  std::vector<Double_t> *m_pSA_superpointR_EO;
  std::vector<Double_t> *m_pSA_superpointR_EE;
  std::vector<Double_t> *m_pSA_superpointR_CSC;
  std::vector<Double_t> *m_pSA_superpointR_BEE;
  std::vector<Double_t> *m_pSA_superpointSlope_BI;
  std::vector<Double_t> *m_pSA_superpointSlope_BM;
  std::vector<Int_t> *m_pEFTAG_pass;

  //TBranch *b_aipc;
  TBranch *b_eNumber;
  TBranch *b_rNumber;
  TBranch *b_mes_name;
  TBranch *b_aipc;
  TBranch *b_tag_proc;
  TBranch *b_tag_pt;
  TBranch *b_tag_eta;
  TBranch *b_tag_exteta;
  TBranch *b_tag_extinneta;
  TBranch *b_tag_phi;
  TBranch *b_tag_extphi;
  TBranch *b_tag_extinnphi;
  TBranch *b_tag_charge;
  TBranch *b_tag_d0;
  TBranch *b_tag_z0;
  TBranch *b_probe_pt;
  TBranch *b_probe_eta;
  TBranch *b_probe_exteta;
  TBranch *b_probe_extinneta;
  TBranch *b_probe_phi;
  TBranch *b_probe_extphi;
  TBranch *b_probe_extinnphi;
  TBranch *b_probe_charge;
  TBranch *b_probe_d0;
  TBranch *b_probe_z0;
  TBranch *b_probe_segment_etaIndex;
  TBranch *b_probe_segment_chamberIndex;
  TBranch *b_probe_segment_x;
  TBranch *b_probe_segment_y;
  TBranch *b_probe_segment_z;
  TBranch *b_probe_segment_nPrecisionHits;
  TBranch *b_probe_segment_sector;
  TBranch *b_tp_dR;
  TBranch *b_tp_extdR;
  TBranch *b_tL1_pt;
  TBranch *b_tL1_eta;
  TBranch *b_tL1_phi;
  TBranch *b_tSA_pt;
  TBranch *b_tSA_eta;
  TBranch *b_tSA_phi;
  TBranch *b_pL1_pt;
  TBranch *b_pL1_eta;
  TBranch *b_pL1_phi;
  TBranch *b_pL1_dR;;
  TBranch *b_pL1_pass;
  TBranch *b_pL1_roiNumber;
  TBranch *b_pL1_roiSector;
  TBranch *b_sumReqdRL1;
  TBranch *b_pSA_pt;
  TBranch *b_pSA_eta;
  TBranch *b_pSA_phi;
  TBranch *b_pSA_dR;
  TBranch *b_pSA_sAddress;
  TBranch *b_pSA_roiNumber;
  TBranch *b_pSA_roiSector;
  TBranch *b_pSA_phims;
  TBranch *b_pSA_phibe;
  TBranch *b_pSA_roieta;
  TBranch *b_pSA_roiphi;
  TBranch *b_pSA_pass;
  TBranch *b_pSA_rpcX;
  TBranch *b_pSA_rpcY;
  TBranch *b_pSA_rpcZ;
  TBranch *b_pSA_rpcR;
  TBranch *b_pSA_mdtZ;
  TBranch *b_pSA_mdtR;
  TBranch *b_pSA_mdtPhi;
  TBranch *b_pSA_mdthitChamber;
  TBranch *b_pSA_superpointZ_BI;
  TBranch *b_pSA_superpointZ_BM;
  TBranch *b_pSA_superpointZ_BO;
  TBranch *b_pSA_superpointZ_BME;
  TBranch *b_pSA_superpointZ_EI;
  TBranch *b_pSA_superpointZ_EM;
  TBranch *b_pSA_superpointZ_EO;
  TBranch *b_pSA_superpointZ_EE;
  TBranch *b_pSA_superpointZ_CSC;
  TBranch *b_pSA_superpointZ_BEE;
  TBranch *b_pSA_superpointR_BI;
  TBranch *b_pSA_superpointR_BM;
  TBranch *b_pSA_superpointR_BO;
  TBranch *b_pSA_superpointR_BME;
  TBranch *b_pSA_superpointR_EI;
  TBranch *b_pSA_superpointR_EM;
  TBranch *b_pSA_superpointR_EO;
  TBranch *b_pSA_superpointR_EE;
  TBranch *b_pSA_superpointR_CSC;
  TBranch *b_pSA_superpointR_BEE;
  TBranch *b_pSA_superpointSlope_BI;
  TBranch *b_pSA_superpointSlope_BM;

  TBranch *b_sumReqdREF;
  TBranch *b_pEF_pass;
  TBranch *b_pEFTAG_pass;

  //histgram
  //Standard
  TH1D *m_h_pOffPt;
  TH1D *m_h_pL1Pt;
  TH1D *m_h_pSAPt;

  TH1D *m_h_BarrelAlpha;
  TH1D *m_h_BarrelBeta;
  TH2F *m_h_PtvsBarrelAlpha;
  TH2F *m_h_PtvsBarrelBeta;
  TH2F *m_h_ChargevsAlpha;
  TH2F *m_h_ChargevsBeta;
  TH2F *m_h_lutAvsBAlpha;
  TH2F *m_h_lutAvsBBeta;

  //Efficiency
  TH1D *m_h_eOffPt;
  TH1D *m_h_eL1Pt;
  TH1D *m_h_eSAPt;
  TH1D *m_h_eOffEta;
  TH1D *m_h_eL1Eta;
  TH1D *m_h_eSAEta;
  TH1D *m_h_eOffPhi;
  TH1D *m_h_eL1Phi;
  TH1D *m_h_eSAPhi;
  TH1D *m_h_eOffPtBarrel;
  TH1D *m_h_eL1PtBarrel;
  TH1D *m_h_eSAPtBarrel;
  TH1D *m_h_eL1PtBarrelSP[4];
  TH1D *m_h_eSAPtBarrelSP[4];
  TH1D *m_h_eOffPtTransition;
  TH1D *m_h_eL1PtTransition;
  TH1D *m_h_eSAPtTransition;
  TH1D *m_h_eL1PtTransitionSP[4];
  TH1D *m_h_eSAPtTransitionSP[4];
  TH1D *m_h_eOffPtEndcap;
  TH1D *m_h_eL1PtEndcap;
  TH1D *m_h_eSAPtEndcap;
  TH1D *m_h_eL1PtEndcapSP[4];
  TH1D *m_h_eSAPtEndcapSP[4];
  TH1D *m_h_eOffPtForward;
  TH1D *m_h_eL1PtForward;
  TH1D *m_h_eSAPtForward;
  TH1D *m_h_eL1PtForwardSP[4];
  TH1D *m_h_eSAPtForwardSP[4];
  TH1D *m_h_eL1PtBarrelMyLUTAlpha;
  TH1D *m_h_eSAPtBarrelMyLUTAlpha;
  TH1D *m_h_eL1PtBarrelMyLUTBeta;
  TH1D *m_h_eSAPtBarrelMyLUTBeta;

  //Residual
  TH1D *m_h_pSAResPt;

  TH1D *m_h_pSAResPtBarrelAlpha;
  TH1D *m_h_pSAResPtBarrelBeta;
  TH1D *m_h_pSAResPtBarrelAlphaSector[5];//Large Sector11 Sector15 Small SmallSpecial
  TH1D *m_h_pSAResPtBarrelBetaSector[5];
  TH1D *m_h_pSAResPtBarrelAlpha3SP;
  TH1D *m_h_pSAResPtBarrelBeta3SP;
  TH1D *m_h_pSAResPtBarrelAlpha2SP;
  TH1D *m_h_pSAResPtBarrelBeta2SP;
  TH1D *m_h_pSAResPtBarrelAlpha1SP;
  TH1D *m_h_pSAResPtBarrel3SP;
  TH1D *m_h_pSAResPtBarrel2SP;
  TH1D *m_h_pSAResPtBarrel1SP;
  TH2F *m_h_pSAResPtvsDeltaTheta;

  //parameter
  Int_t m_nbin_eta,m_nbin_phi;
  Double_t m_eta_max,m_phi_max,m_reqL1dR;
  std::string m_method_name;
  Int_t m_proc;

  Double_t m_binmax;
  Double_t m_efficiency_xerr;

  Double_t m_LUTAlphaSectorChargeEtaPhi[5][2][30][30][2];//Sector Charge Eta Phi parAorB
  Double_t m_LUTBetaSectorChargeEtaPhi[5][2][30][30][2];

public:
  Efficiency(TTree *tree){
    tChain = tree;
    m_eNumber = 0;
    m_rNumber = 0;
    m_aipc = 0;
    m_tag_proc = 0;
    m_toff_pt = 0;
    m_toff_eta = 0;
    m_toff_exteta = 0;
    m_toff_extinneta = 0;
    m_toff_phi = 0;
    m_toff_extphi = 0;
    m_toff_extinnphi = 0;
    m_tag_charge = 0;
    m_tag_d0 = 0;
    m_tag_z0 = 0;
    m_poff_pt = 0;
    m_poff_eta = 0;
    m_poff_exteta = 0;
    m_poff_extinneta = 0;
    m_poff_phi = 0;
    m_poff_extphi = 0;
    m_poff_extinnphi = 0;
    m_poff_charge = 0;
    m_poff_d0 = 0;
    m_poff_z0 = 0;
    m_tp_dR = 0;
    m_tp_extdR = 0;
    m_tL1_pt = 0;
    m_tL1_eta = 0;
    m_tL1_phi = 0;
    m_tSA_pt = 0;
    m_tSA_eta = 0;
    m_tSA_phi = 0;
    m_mes_name = 0;
    m_pL1_pt = 0;
    m_pL1_eta = 0;
    m_pL1_phi = 0;
    m_pL1_dR = 0;
    m_pL1_pass = 0;
    m_pL1_roiNumber = 0;
    m_pL1_roiSector = 0;
    m_sumReqdRL1 = 0;
    m_pSA_pt = 0;
    m_pSA_eta = 0;
    m_pSA_phi = 0;
    m_pSA_dR = 0;
    m_pSA_pass = 0;
    m_pSA_sAddress = 0;
    m_pSA_rpcX = 0;
    m_pSA_rpcY = 0;
    m_pSA_rpcZ = 0;
    m_pSA_rpcR = 0;
    m_pSA_mdtZ = 0;
    m_pSA_mdtR = 0;
    m_pSA_mdtPhi = 0;
    m_pSA_mdthitChamber = 0;
    m_pSA_phims = 0;
    m_pSA_phibe = 0;
    m_pSA_roieta = 0;
    m_pSA_roiphi = 0;
    m_pSA_roiNumber = 0;
    m_pSA_roiSector = 0;
    m_pSA_superpointZ_BI = 0;
    m_pSA_superpointZ_BM = 0;
    m_pSA_superpointZ_BO = 0;
    m_pSA_superpointZ_BME = 0;
    m_pSA_superpointZ_EI = 0;
    m_pSA_superpointZ_EM = 0;
    m_pSA_superpointZ_EO = 0;
    m_pSA_superpointZ_EE = 0;
    m_pSA_superpointZ_CSC = 0;
    m_pSA_superpointZ_BEE = 0;
    m_pSA_superpointZ_BME = 0;
    m_pSA_superpointR_BI = 0;
    m_pSA_superpointR_BM = 0;
    m_pSA_superpointR_BO = 0;
    m_pSA_superpointR_BME = 0;
    m_pSA_superpointR_EI = 0;
    m_pSA_superpointR_EM = 0;
    m_pSA_superpointR_EO = 0;
    m_pSA_superpointR_EE = 0;
    m_pSA_superpointR_CSC = 0;
    m_pSA_superpointR_BEE = 0;
    m_pSA_superpointR_BME = 0;
    m_pSA_superpointSlope_BI = 0;
    m_pSA_superpointSlope_BM = 0;
    m_pEFTAG_pass = 0;
    m_sumReqdREF = 0;

      //active only need branch 
    tChain->SetBranchStatus("*",0);
    tChain->SetBranchStatus("EventNumber",1);
    tChain->SetBranchStatus("RunNumber",1);
    tChain->SetBranchStatus("mes_name",1);
    tChain->SetBranchStatus("AverageInteractionsPerCrossing",1);
    tChain->SetBranchStatus("tag_proc",1);
    tChain->SetBranchStatus("tag_pt",1);
    tChain->SetBranchStatus("tag_eta",1);
    tChain->SetBranchStatus("tag_exteta",1);
    tChain->SetBranchStatus("tag_extinneta",1);
    tChain->SetBranchStatus("tag_phi",1);
    tChain->SetBranchStatus("tag_extphi",1);
    tChain->SetBranchStatus("tag_extinnphi",1);
    tChain->SetBranchStatus("tag_charge",1);
    tChain->SetBranchStatus("tag_d0",1);
    tChain->SetBranchStatus("tag_z0",1);
    tChain->SetBranchStatus("probe_pt",1);
    tChain->SetBranchStatus("probe_eta",1);
    tChain->SetBranchStatus("probe_exteta",1);
    tChain->SetBranchStatus("probe_extinneta",1);
    tChain->SetBranchStatus("probe_phi",1);
    tChain->SetBranchStatus("probe_extphi",1);
    tChain->SetBranchStatus("probe_extinnphi",1);
    tChain->SetBranchStatus("probe_charge",1);
    tChain->SetBranchStatus("probe_d0",1);
    tChain->SetBranchStatus("probe_z0",1);
    tChain->SetBranchStatus("probe_segment_etaIndex",1);
    tChain->SetBranchStatus("probe_segment_chamberIndex",1);
    tChain->SetBranchStatus("probe_segment_x",1);
    tChain->SetBranchStatus("probe_segment_y",1);
    tChain->SetBranchStatus("probe_segment_z",1);
    tChain->SetBranchStatus("probe_segment_nPrecisionHits",1);
    tChain->SetBranchStatus("probe_segment_sector",1);
    tChain->SetBranchStatus("tp_dR",1);
    tChain->SetBranchStatus("tp_extdR",1);
    tChain->SetBranchStatus("tag_L1_pt",1);
    tChain->SetBranchStatus("tag_L1_eta",1);
    tChain->SetBranchStatus("tag_L1_phi",1);
    tChain->SetBranchStatus("tag_SA_pt",1);
    tChain->SetBranchStatus("tag_SA_eta",1);
    tChain->SetBranchStatus("tag_SA_phi",1);
    tChain->SetBranchStatus("probe_mesL1_pt",1);
    tChain->SetBranchStatus("probe_mesL1_eta",1);
    tChain->SetBranchStatus("probe_mesL1_phi",1);
    tChain->SetBranchStatus("probe_mesL1_pass",1);
    tChain->SetBranchStatus("probe_mesL1_dR",1);
    tChain->SetBranchStatus("probe_mesL1_roiNumber",1);
    tChain->SetBranchStatus("probe_mesL1_roiSector",1);
    tChain->SetBranchStatus("sumReqdRL1",1);
    tChain->SetBranchStatus("probe_mesSA_pt",1);
    tChain->SetBranchStatus("probe_mesSA_eta",1);
    tChain->SetBranchStatus("probe_mesSA_phi",1);
    tChain->SetBranchStatus("probe_mesSA_pass",1);
    tChain->SetBranchStatus("probe_mesSA_dR",1);
    tChain->SetBranchStatus("probe_mesSA_sAddress",1);
    tChain->SetBranchStatus("probe_mesSA_phims",1);
    tChain->SetBranchStatus("probe_mesSA_phibe",1);
    tChain->SetBranchStatus("probe_mesSA_roiEta",1);
    tChain->SetBranchStatus("probe_mesSA_roiPhi",1);
    tChain->SetBranchStatus("probe_mesSA_roiNumber",1);
    tChain->SetBranchStatus("probe_mesSA_roiSector",1);
    tChain->SetBranchStatus("probe_mesSA_rpcHitX",1);
    tChain->SetBranchStatus("probe_mesSA_rpcHitY",1);
    tChain->SetBranchStatus("probe_mesSA_rpcHitZ",1);
    tChain->SetBranchStatus("probe_mesSA_rpcHitR",1);
    tChain->SetBranchStatus("probe_mesSA_mdtHitZ",1);
    tChain->SetBranchStatus("probe_mesSA_mdtHitR",1);
    tChain->SetBranchStatus("probe_mesSA_mdtHitPhi",1);
    tChain->SetBranchStatus("probe_mesSA_mdtHitChamber",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BM",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BO",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BME",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_EI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_EM",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_EO",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_EE",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_CSC",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BEE",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BM",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BO",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BME",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_EI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_EM",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_EO",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_EE",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_CSC",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BEE",1);
    tChain->SetBranchStatus("probe_mesSA_superPointSlope_BI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointSlope_BM",1);
    tChain->SetBranchStatus("sumReqdREF",1);
    tChain->SetBranchStatus("probe_mesEFTAG_pass",1);

      //setting each branch address
    tChain->SetBranchAddress("EventNumber",&m_eNumber,&b_eNumber);
    tChain->SetBranchAddress("RunNumber",&m_rNumber,&b_rNumber);
    tChain->SetBranchAddress("mes_name",&m_mes_name,&b_mes_name);
    tChain->SetBranchAddress("AverageInteractionsPerCrossing",&m_aipc,&b_aipc);
    tChain->SetBranchAddress("tag_proc",&m_tag_proc,&b_tag_proc);
    tChain->SetBranchAddress("tag_pt",&m_toff_pt,&b_tag_pt);
    tChain->SetBranchAddress("tag_eta",&m_toff_eta,&b_tag_eta);
    tChain->SetBranchAddress("tag_exteta",&m_toff_exteta,&b_tag_exteta);
    tChain->SetBranchAddress("tag_extinneta",&m_toff_extinneta,&b_tag_extinneta);
    tChain->SetBranchAddress("tag_phi",&m_toff_phi,&b_tag_phi);
    tChain->SetBranchAddress("tag_extphi",&m_toff_extphi,&b_tag_extphi);
    tChain->SetBranchAddress("tag_extinnphi",&m_toff_extinnphi,&b_tag_extinnphi);
    tChain->SetBranchAddress("tag_charge",&m_tag_charge,&b_tag_charge);
    tChain->SetBranchAddress("tag_d0",&m_tag_d0,&b_tag_d0);
    tChain->SetBranchAddress("tag_z0",&m_tag_z0,&b_tag_z0);
    tChain->SetBranchAddress("probe_pt",&m_poff_pt,&b_probe_pt);
    tChain->SetBranchAddress("probe_eta",&m_poff_eta,&b_probe_eta);
    tChain->SetBranchAddress("probe_exteta",&m_poff_exteta,&b_probe_exteta);
    tChain->SetBranchAddress("probe_extinneta",&m_poff_extinneta,&b_probe_extinneta);
    tChain->SetBranchAddress("probe_phi",&m_poff_phi,&b_probe_phi);
    tChain->SetBranchAddress("probe_extphi",&m_poff_extphi,&b_probe_extphi);
    tChain->SetBranchAddress("probe_extinnphi",&m_poff_extinnphi,&b_probe_extinnphi);
    tChain->SetBranchAddress("probe_charge",&m_poff_charge,&b_probe_charge);
    tChain->SetBranchAddress("probe_d0",&m_poff_d0,&b_probe_d0);
    tChain->SetBranchAddress("probe_z0",&m_poff_z0,&b_probe_z0);
    tChain->SetBranchAddress("probe_segment_etaIndex",m_probe_segment_etaIndex,&b_probe_segment_etaIndex);
    tChain->SetBranchAddress("probe_segment_chamberIndex",m_probe_segment_chamberIndex,&b_probe_segment_chamberIndex);
    tChain->SetBranchAddress("probe_segment_x",m_probe_segment_x,&b_probe_segment_x);
    tChain->SetBranchAddress("probe_segment_y",m_probe_segment_y,&b_probe_segment_y);
    tChain->SetBranchAddress("probe_segment_z",m_probe_segment_z,&b_probe_segment_z);
    tChain->SetBranchAddress("probe_segment_nPrecisionHits",m_probe_segment_nPrecisionHits,&b_probe_segment_nPrecisionHits);
    tChain->SetBranchAddress("probe_segment_sector",m_probe_segment_sector,&b_probe_segment_sector);
    tChain->SetBranchAddress("tp_dR",&m_tp_dR,&b_tp_dR);
    tChain->SetBranchAddress("tp_extdR",&m_tp_extdR,&b_tp_extdR);
    tChain->SetBranchAddress("tag_L1_pt",&m_tL1_pt,&b_tL1_pt);
    tChain->SetBranchAddress("tag_L1_eta",&m_tL1_eta,&b_tL1_eta);
    tChain->SetBranchAddress("tag_L1_phi",&m_tL1_phi,&b_tL1_phi);
    tChain->SetBranchAddress("tag_SA_pt",&m_tSA_pt,&b_tSA_pt);
    tChain->SetBranchAddress("tag_SA_eta",&m_tSA_eta,&b_tSA_eta);
    tChain->SetBranchAddress("tag_SA_phi",&m_tSA_phi,&b_tSA_phi);
    tChain->SetBranchAddress("probe_mesL1_pt",&m_pL1_pt,&b_pL1_pt);
    tChain->SetBranchAddress("probe_mesL1_eta",&m_pL1_eta,&b_pL1_eta);
    tChain->SetBranchAddress("probe_mesL1_phi",&m_pL1_phi,&b_pL1_phi);
    tChain->SetBranchAddress("probe_mesL1_pass",&m_pL1_pass,&b_pL1_pass);
    tChain->SetBranchAddress("probe_mesL1_dR",&m_pL1_dR,&b_pL1_dR);
    tChain->SetBranchAddress("probe_mesL1_roiNumber",&m_pL1_roiNumber,&b_pL1_roiNumber);
    tChain->SetBranchAddress("probe_mesL1_roiSector",&m_pL1_roiSector,&b_pL1_roiSector);
    tChain->SetBranchAddress("sumReqdRL1",&m_sumReqdRL1,&b_sumReqdRL1);
    tChain->SetBranchAddress("probe_mesSA_pt",&m_pSA_pt,&b_pSA_pt);
    tChain->SetBranchAddress("probe_mesSA_eta",&m_pSA_eta,&b_pSA_eta);
    tChain->SetBranchAddress("probe_mesSA_phi",&m_pSA_phi,&b_pSA_phi);
    tChain->SetBranchAddress("probe_mesSA_pass",&m_pSA_pass,&b_pSA_pass);
    tChain->SetBranchAddress("probe_mesSA_dR",&m_pSA_dR,&b_pSA_dR);
    tChain->SetBranchAddress("probe_mesSA_sAddress",&m_pSA_sAddress,&b_pSA_sAddress);
    tChain->SetBranchAddress("probe_mesSA_rpcHitX",&m_pSA_rpcX,&b_pSA_rpcX);
    tChain->SetBranchAddress("probe_mesSA_rpcHitY",&m_pSA_rpcY,&b_pSA_rpcY);
    tChain->SetBranchAddress("probe_mesSA_rpcHitZ",&m_pSA_rpcZ,&b_pSA_rpcZ);
    tChain->SetBranchAddress("probe_mesSA_rpcHitR",&m_pSA_rpcR,&b_pSA_rpcR);
    tChain->SetBranchAddress("probe_mesSA_mdtHitZ",&m_pSA_mdtZ,&b_pSA_mdtZ);
    tChain->SetBranchAddress("probe_mesSA_mdtHitR",&m_pSA_mdtR,&b_pSA_mdtR);
    tChain->SetBranchAddress("probe_mesSA_mdtHitPhi",&m_pSA_mdtPhi,&b_pSA_mdtPhi);
    tChain->SetBranchAddress("probe_mesSA_mdtHitChamber",&m_pSA_mdthitChamber,&b_pSA_mdthitChamber);
    tChain->SetBranchAddress("probe_mesSA_phims",&m_pSA_phims,&b_pSA_phims);
    tChain->SetBranchAddress("probe_mesSA_phibe",&m_pSA_phibe,&b_pSA_phibe);
    tChain->SetBranchAddress("probe_mesSA_roiEta",&m_pSA_roieta,&b_pSA_roieta);
    tChain->SetBranchAddress("probe_mesSA_roiPhi",&m_pSA_roiphi,&b_pSA_roiphi);
    tChain->SetBranchAddress("probe_mesSA_roiNumber",&m_pSA_roiNumber,&b_pSA_roiNumber);
    tChain->SetBranchAddress("probe_mesSA_roiSector",&m_pSA_roiSector,&b_pSA_roiSector);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BI",&m_pSA_superpointZ_BI,&b_pSA_superpointZ_BI);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BM",&m_pSA_superpointZ_BM,&b_pSA_superpointZ_BM);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BO",&m_pSA_superpointZ_BO,&b_pSA_superpointZ_BO);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BME",&m_pSA_superpointZ_BME,&b_pSA_superpointZ_BME);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_EI",&m_pSA_superpointZ_EI,&b_pSA_superpointZ_EI);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_EM",&m_pSA_superpointZ_EM,&b_pSA_superpointZ_EM);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_EO",&m_pSA_superpointZ_EO,&b_pSA_superpointZ_EO);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_EE",&m_pSA_superpointZ_EE,&b_pSA_superpointZ_EE);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_CSC",&m_pSA_superpointZ_CSC,&b_pSA_superpointZ_CSC);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BEE",&m_pSA_superpointZ_BEE,&b_pSA_superpointZ_BEE);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BI",&m_pSA_superpointR_BI,&b_pSA_superpointR_BI);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BM",&m_pSA_superpointR_BM,&b_pSA_superpointR_BM);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BO",&m_pSA_superpointR_BO,&b_pSA_superpointR_BO);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BME",&m_pSA_superpointR_BME,&b_pSA_superpointR_BME);
    tChain->SetBranchAddress("probe_mesSA_superPointR_EI",&m_pSA_superpointR_EI,&b_pSA_superpointR_EI);
    tChain->SetBranchAddress("probe_mesSA_superPointR_EM",&m_pSA_superpointR_EM,&b_pSA_superpointR_EM);
    tChain->SetBranchAddress("probe_mesSA_superPointR_EO",&m_pSA_superpointR_EO,&b_pSA_superpointR_EO);
    tChain->SetBranchAddress("probe_mesSA_superPointR_EE",&m_pSA_superpointR_EE,&b_pSA_superpointR_EE);
    tChain->SetBranchAddress("probe_mesSA_superPointR_CSC",&m_pSA_superpointR_CSC,&b_pSA_superpointR_CSC);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BEE",&m_pSA_superpointR_BEE,&b_pSA_superpointR_BEE);
    tChain->SetBranchAddress("probe_mesSA_superPointSlope_BI",&m_pSA_superpointSlope_BI,&b_pSA_superpointSlope_BI);
    tChain->SetBranchAddress("probe_mesSA_superPointSlope_BM",&m_pSA_superpointSlope_BM,&b_pSA_superpointSlope_BM);
    tChain->SetBranchAddress("sumReqdREF",&m_sumReqdREF,&b_sumReqdREF);
    tChain->SetBranchAddress("probe_mesEFTAG_pass",&m_pEFTAG_pass,&b_pEFTAG_pass);

    //define each histgram
              //Standard
    m_h_pOffPt = new TH1D("h_poff_pt","probe offline pt;offline pt[GeV];Entries",150,0,150);
    m_h_pL1Pt = new TH1D("h_pL1_pt","probe L1 pt;L1 pt[GeV];Entries",150,0,150);
    m_h_pSAPt = new TH1D("h_pSA_pt","probe L2MuonSA pt;L2MuonSA pt[GeV];Entries",150,0,150); 

    m_h_BarrelAlpha = new TH1D("h_BarrelAlpha",";barrel #alpha;Entries",120,-0.6,0.6);
    m_h_BarrelBeta = new TH1D("h_BarrelBeta",";barrel #beta;Entries",120,-0.6,0.6);
    m_h_PtvsBarrelAlpha = new TH2F("h_PtvsBarrelAlpha","1/p_{T} vs Barrel #alpha;1/p_{T};barrel #alpha",100,0.,1.0,200,-1.0,1.0);
    m_h_PtvsBarrelBeta = new TH2F("h_PtvsBarrelBeta","1/p_{T} vs Barrel #beta;1/p_{T};barrel #beta",100,0.,1.0,200,-1.0,1.0);
    m_h_ChargevsAlpha = new TH2F("h_ChargevsAlpha",";;",2,-0.5,1.5,120,-0.6,0.6);
    m_h_ChargevsBeta = new TH2F("h_ChargevsBeta",";;",2,-0.5,1.5,120,-0.6,0.6);
    m_h_lutAvsBAlpha = new TH2F("h_lutAvsBAlpha","LUT parameter A vs B; parameter A;parameter B",200,-1.,1.,2000,-10.,10.);
    m_h_lutAvsBBeta = new TH2F("h_lutAvsBBeta","LUT parameter A vs B; parameter A;parameter B",200,-1.,1.,2000,-10.,10.);

              //Efficiency
    m_h_eOffPt = new TH1D("h_eoff_pt","mesoff_pt;offline pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1Pt = new TH1D("h_eL1_pt","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPt = new TH1D("h_eSA_pt","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eOffEta = new TH1D("h_eoff_eta","off eta;off eta;Entries",50,-2.5,2.5);
    m_h_eL1Eta = new TH1D("h_eL1_eta","L1 eta;L1 eta;Entries",50,-2.5,2.5);
    m_h_eSAEta = new TH1D("h_eSA_eta","SA eta;SA eta;Entries",50,-2.5,2.5);
    m_h_eOffPhi = new TH1D("h_eoff_phi","off eta;off eta;Entries",48,-3.0,3.0);
    m_h_eL1Phi = new TH1D("h_eL1_phi","L1 phi;L1 phi;Entries",48,-3.0,3.0);
    m_h_eSAPhi = new TH1D("h_eSA_phi","SA phi;SA phi;Entries",48,-3.0,3.0);
    m_h_eOffPtBarrel = new TH1D("h_eoff_ptBarrel","off_pt;off pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtBarrel = new TH1D("h_eL1_ptBarrel","L1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtBarrel = new TH1D("h_eSA_ptBarrel","SA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtBarrelSP[0] = new TH1D("h_eL1PtBarrel0SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtBarrelSP[0] = new TH1D("h_eSAPtBarrel0SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtBarrelSP[1] = new TH1D("h_eL1PtBarrel1SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtBarrelSP[1] = new TH1D("h_eSAPtBarrel1SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtBarrelSP[2] = new TH1D("h_eL1PtBarrel2SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtBarrelSP[2] = new TH1D("h_eSAPtBarrel2SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtBarrelSP[3] = new TH1D("h_eL1PtBarrel3SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtBarrelSP[3] = new TH1D("h_eSAPtBarrel3SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eOffPtTransition = new TH1D("h_eoff_ptTransition","off_pt;off pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtTransition = new TH1D("h_eL1_ptTransition","L1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtTransition = new TH1D("h_eSA_ptTransition","SA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtTransitionSP[0] = new TH1D("h_eL1PtTransition0SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtTransitionSP[0] = new TH1D("h_eSAPtTransition0SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtTransitionSP[1] = new TH1D("h_eL1PtTransition1SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtTransitionSP[1] = new TH1D("h_eSAPtTransition1SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtTransitionSP[2] = new TH1D("h_eL1PtTransition2SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtTransitionSP[2] = new TH1D("h_eSAPtTransition2SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtTransitionSP[3] = new TH1D("h_eL1PtTransition3SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtTransitionSP[3] = new TH1D("h_eSAPtTransition3SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eOffPtEndcap = new TH1D("h_eoff_ptEndcap","off_pt;off pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtEndcap = new TH1D("h_eL1_ptEndcap","L1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtEndcap = new TH1D("h_eSA_ptEndcap","SA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtEndcapSP[0] = new TH1D("h_eL1PtEndcap0SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtEndcapSP[0] = new TH1D("h_eSAPtEndcap0SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtEndcapSP[1] = new TH1D("h_eL1PtEndcap1SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtEndcapSP[1] = new TH1D("h_eSAPtEndcap1SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtEndcapSP[2] = new TH1D("h_eL1PtEndcap2SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtEndcapSP[2] = new TH1D("h_eSAPtEndcap2SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtEndcapSP[3] = new TH1D("h_eL1PtEndcap3SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtEndcapSP[3] = new TH1D("h_eSAPtEndcap3SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eOffPtForward = new TH1D("h_eoff_ptForward","off_pt;off pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtForward = new TH1D("h_eL1_ptForward","L1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtForward = new TH1D("h_eSA_ptForward","SA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtForwardSP[0] = new TH1D("h_eL1PtForward0SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtForwardSP[0] = new TH1D("h_eSAPtForward0SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtForwardSP[1] = new TH1D("h_eL1PtForward1SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtForwardSP[1] = new TH1D("h_eSAPtForward1SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtForwardSP[2] = new TH1D("h_eL1PtForward2SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtForwardSP[2] = new TH1D("h_eSAPtForward2SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);
    m_h_eL1PtForwardSP[3] = new TH1D("h_eL1PtForward3SP","mesL1_pt;L1 pt[GeV];Entries",200,-0.25,99.75);
    m_h_eSAPtForwardSP[3] = new TH1D("h_eSAPtForward3SP","mesSA_pt;SA pt[GeV];Entries",200,-0.25,99.75);

    m_h_eL1PtBarrelMyLUTAlpha = new TH1D("h_eL1PtBarrelMyLUTAlpha",";;",200,-0.25,99.75);
    m_h_eSAPtBarrelMyLUTAlpha = new TH1D("h_eSAPtBarrelMyLUTAlpha",";;",200,-0.25,99.75);
    m_h_eL1PtBarrelMyLUTBeta = new TH1D("h_eL1PtBarrelMyLUTBeta",";;",200,-0.25,99.75);
    m_h_eSAPtBarrelMyLUTBeta = new TH1D("h_eSAPtBarrelMyLUTBeta",";;",200,-0.25,99.75);

      //Residual
    m_h_pSAResPt = new TH1D("h_pSAResPt","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlpha = new TH1D("h_pSAResPtBarrelAlpha","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelBeta = new TH1D("h_pSAResPtBarrelBeta","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlphaSector[0] = new TH1D("h_pSAResPtBarrelAlphaLarge","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelBetaSector[0] = new TH1D("h_pSAResPtBarrelBetaLarge","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlphaSector[1] = new TH1D("h_pSAResPtBarrelAlphaSector11","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelBetaSector[1] = new TH1D("h_pSAResPtBarrelBetaSector11","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlphaSector[2] = new TH1D("h_pSAResPtBarrelAlphaSector15","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelBetaSector[2] = new TH1D("h_pSAResPtBarrelBetaSector15","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlphaSector[3] = new TH1D("h_pSAResPtBarrelAlphaSmall","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelBetaSector[3] = new TH1D("h_pSAResPtBarrelBetaSmall","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlphaSector[4] = new TH1D("h_pSAResPtBarrelAlphaSmallSpecial","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelBetaSector[4] = new TH1D("h_pSAResPtBarrelBetaSmallSpecial","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlpha3SP = new TH1D("h_pSAResPtBarrelAlpha3SP","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelBeta3SP = new TH1D("h_pSAResPtBarrelBeta3SP","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlpha2SP = new TH1D("h_pSAResPtBarrelAlpha2SP","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelBeta2SP = new TH1D("h_pSAResPtBarrelBeta2SP","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrelAlpha1SP = new TH1D("h_pSAResPtBarrelAlpha1SP","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrel1SP = new TH1D("h_pSAResPtBarrel1SP","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrel2SP = new TH1D("h_pSAResPtBarrel2SP","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtBarrel3SP = new TH1D("h_pSAResPtBarrel3SP","probe L2MuonSA residual pt;residual pt;Entries",300,-1,1);
    m_h_pSAResPtvsDeltaTheta = new TH2F("h_pSAResPtvsDeltaTheta","#Delta#theta vs p_{T} residual;#Delta#theta;p_{T} residual",100,-0.5,0.5,300,-1,1);
  }

  void Init(std::string name,const Int_t np,const Int_t ne,const Double_t mp,const Double_t me,Double_t req,Int_t max,Double_t err,Int_t proc);
  bool DicisionBarrel(Double_t eta);
  bool CutTagProbe(Int_t pass);
  bool CutL1(Int_t pass);
  bool CutSA(Int_t pass);
  bool PlateauCut(Double_t pt);
  bool CutSAMyLUT(Double_t Pt,Int_t L1Number,Int_t L1Sector,Int_t SANumber,Int_t SASector);
  void CalcPtByAlpha(Double_t parA,Double_t parB,Double_t angle,Double_t charge,Int_t nSP,Double_t &pt);
  void CalcPtByBeta(Double_t parA,Double_t parB,Double_t angle,Double_t charge,Int_t nSP,Double_t &pt);
  int EtaDistribution();
  int EtaDistribution(Float_t roieta);
  void Execute(Int_t ev);
  void Finalize(TFile *tf1);
  ~Efficiency(){
    //delete
    for(Int_t i = 0;i < 5;++i){
      delete  m_h_pSAResPtBarrelAlphaSector[i];
      delete  m_h_pSAResPtBarrelBetaSector[i];
    }
    for(Int_t i = 0;i < 4;++i){
      delete  m_h_eL1PtBarrelSP[i];
      delete  m_h_eSAPtBarrelSP[i];
      delete  m_h_eL1PtTransitionSP[i];
      delete  m_h_eSAPtTransitionSP[i];
      delete  m_h_eL1PtEndcapSP[i];
      delete  m_h_eSAPtEndcapSP[i];
      delete  m_h_eL1PtForwardSP[i];
      delete  m_h_eSAPtForwardSP[i];
    }

    delete  m_h_pOffPt;
    delete  m_h_pL1Pt;
    delete  m_h_pSAPt;

    delete  m_h_BarrelAlpha;
    delete  m_h_BarrelBeta;
    delete  m_h_PtvsBarrelAlpha;
    delete  m_h_PtvsBarrelBeta;
    delete  m_h_ChargevsAlpha;
    delete  m_h_ChargevsBeta;
    delete  m_h_lutAvsBAlpha;
    delete  m_h_lutAvsBBeta;

    delete  m_h_eOffPt;
    delete  m_h_eL1Pt;
    delete  m_h_eSAPt;
    delete  m_h_eOffEta;
    delete  m_h_eL1Eta;
    delete  m_h_eSAEta;
    delete  m_h_eOffPhi;
    delete  m_h_eL1Phi;
    delete  m_h_eSAPhi;
    delete  m_h_eOffPtBarrel;
    delete  m_h_eL1PtBarrel;
    delete  m_h_eSAPtBarrel;
    delete  m_h_eOffPtEndcap;
    delete  m_h_eL1PtEndcap;
    delete  m_h_eSAPtEndcap;
    delete  m_h_eOffPtForward;
    delete  m_h_eL1PtForward;
    delete  m_h_eSAPtForward;
    delete  m_h_eOffPtTransition;
    delete  m_h_eL1PtTransition;
    delete  m_h_eSAPtTransition;
    delete  m_h_eL1PtBarrelMyLUTAlpha;
    delete  m_h_eSAPtBarrelMyLUTAlpha;
    delete  m_h_eL1PtBarrelMyLUTBeta;
    delete  m_h_eSAPtBarrelMyLUTBeta;
    delete  m_h_pSAResPt;
    delete  m_h_pSAResPtBarrelAlpha;
    delete  m_h_pSAResPtBarrelBeta;
    delete  m_h_pSAResPtBarrelAlpha3SP;
    delete  m_h_pSAResPtBarrelBeta3SP;
    delete  m_h_pSAResPtBarrelAlpha2SP;
    delete  m_h_pSAResPtBarrelBeta2SP;
    delete  m_h_pSAResPtBarrelAlpha1SP;
    delete  m_h_pSAResPtBarrel1SP;
    delete  m_h_pSAResPtBarrel2SP;
    delete  m_h_pSAResPtBarrel3SP;
    delete  m_h_pSAResPtvsDeltaTheta;
  }
};

#endif//Efficiency_chh
